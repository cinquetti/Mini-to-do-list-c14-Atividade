# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-cov

      - name: Run pytest (junit + html)
        run: |
          pytest -q --junitxml=report.xml --html=report.html --self-contained-html

      - name: Upload test report (xml)
        uses: actions/upload-artifact@v4
        with:
          name: test-report-xml
          path: report.xml

      - name: Upload test report (html)
        uses: actions/upload-artifact@v4
        with:
          name: test-report-html
          path: report.html

  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install build tool
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package (wheel / sdist)
        run: |
          python -m build

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: package-dist
          path: dist/*

  notify:
    name: Notify (send email)
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install requirements for notification script
        run: |
          python -m pip install --upgrade pip
          pip install wheel

      - name: Run notification script
        env:
          RECIPIENT: ${{ secrets.CI_RECIPIENT_EMAIL }}   # agora sem hard-code
          PIPELINE_MSG: "Pipeline executado!"
        run: |
          python scripts/send_email.py
